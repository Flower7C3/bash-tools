#!/usr/bin/env bash

#: exec_target = cli

## Initialize/reinstall site
##
## Usage: fin init-site

# Abort if anything fails
set -e

# fix profile
source ~/.profile

#-------------------------- Settings --------------------------------
#-------------------------- END: Settings --------------------------------

#-------------------------- Helper functions --------------------------------
function copy_settings_file()
{
	local source="$1"
	local dest="$2"

	if [[ ! -f ${dest} ]]; then
		echo "Copying ${dest}..."
		cp ${source} ${dest}
	else
		echo "${dest} already in place."
	fi
}
#-------------------------- END: Helper functions --------------------------------

#-------------------------- Functions --------------------------------
function cache_clean(){
    cd ${PROJECT_ROOT}
    rm -rf app/cache/*
}
function composer_install(){
    cd ${PROJECT_ROOT}
    composer install
}
function nvm_install(){
    cd ${PROJECT_ROOT}
    nvm install
}
function npm_install(){
    cd ${PROJECT_ROOT}
    npm install
}
function gulp_build(){
    cd ${PROJECT_ROOT}
    gulp build
}
function symfony_assets_build(){
    cd ${PROJECT_ROOT}
    php app/console assetic:dump --env=dev
    php app/console assets:install
}
function symlinks_create() {
    cd ${PROJECT_ROOT}
    ln -sf .htaccess.docksal web/.htaccess
}
#-------------------------- END: Functions --------------------------------

#-------------------------- Execution --------------------------------
#uncomment#copy_settings_file ${PROJECT_ROOT}/.docksal/dist/cli/parameters.yml ${PROJECT_ROOT}/app/config/parameters.yml
#uncomment#symlinks_create
#uncomment#cache_clean
#uncomment#nvm_install
#uncomment#npm_install
#uncomment#gulp_build
#uncomment#composer_install
#uncomment#symfony_assets_build
#-------------------------- END: Execution --------------------------------
