#!/usr/bin/env bash

## Restore database from dump file
##
## Usage: fin restore-db

# Abort if anything fails
set -e

#-------------------------- Configure --------------------------------
source $(dirname ${BASH_SOURCE})/_base.sh
cd "$PROJECT_ROOT"

#-------------------------- Execution --------------------------------
cd "$db_dump_dir_path" || exit 11

db_dump_file_name=$1
if [[ -z "$db_dump_file_name" ]]; then
    db_dump_file_name=$(
        ls -t ${db_dump_file_pattern} | head -1
    )
fi
if [[ "$db_dump_file_name" == *.sql ]]; then
    db_dump_sql_file_name="${db_dump_file_name}"
    db_dump_gzip_file_name="${db_dump_file_name}.gz"
fi
if [[ "$db_dump_file_name" == *.gz ]]; then
    db_dump_sql_file_name="${db_dump_file_name/.gz/}"
    db_dump_gzip_file_name="${db_dump_file_name}"
fi
if [[ -f "${db_dump_dir_path}/${db_dump_file_name}" ]]; then
    if [[ -f "$db_dump_gzip_file_name" ]]; then
        gunzip --verbose ${db_dump_gzip_file_name}
    fi
    fin db import "${db_dump_sql_file_name}" --progress || exit 2
else
    printf "There is no dump file under '%s' directory!\n" "$db_dump_dir_path"
    printf "Please run 'fin backup-db' command to dump database from remote repository.\n"
    exit 33
fi
